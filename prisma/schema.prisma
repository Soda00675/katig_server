// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UserRole {
  // HasMany Users
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     User[]
}

model User {
  // BelongsTo UserRole
  id         Int      @id @default(autoincrement())
  userRoleId Int
  contact    String?
  fullname   String
  username   String   @unique
  email      String   @unique
  password   String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  userRole   UserRole @relation(references: [id], fields: [userRoleId], onDelete: Cascade)
  boats      Boat[]
}

model EmergencyHotlines {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Boat {
  id           Int      @id @default(autoincrement())
  ownerId      Int
  name         String   @unique
  operatorName String
  type         String
  status       String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  owner        User     @relation(references: [id], fields: [ownerId], onDelete: Cascade)
}
